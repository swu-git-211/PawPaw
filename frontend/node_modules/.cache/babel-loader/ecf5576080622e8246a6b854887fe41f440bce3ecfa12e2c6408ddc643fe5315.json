{"ast":null,"code":"var _jsxFileName = \"D:\\\\de351\\\\pawpaw\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport { Button, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUpload = ({\n  onImagesChange\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  const maxNumber = 1;\n  const onChange = imageList => {\n    setImages(imageList);\n    onImagesChange(imageList); // Send selected image back to parent\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      border: '1px dashed #ccc',\n      padding: '16px',\n      borderRadius: '8px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(ImageUploading, {\n      multiple: false // Only allow one image\n      ,\n      value: images,\n      onChange: onChange,\n      maxNumber: maxNumber,\n      dataURLKey: \"data_url\",\n      children: ({\n        imageList,\n        onImageUpload,\n        onImageRemoveAll,\n        isDragging,\n        dragProps\n      }) => {\n        var _imageList$;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              backgroundColor: isDragging ? 'rgba(255, 0, 0, 0.1)' : 'transparent',\n              color: isDragging ? 'red' : 'inherit',\n              marginBottom: '16px'\n            },\n            onClick: onImageUpload,\n            ...dragProps,\n            children: \"Click to upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), imageList.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              sx: {\n                marginBottom: '8px'\n              },\n              children: \"Image Selected:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_imageList$ = imageList[0]) === null || _imageList$ === void 0 ? void 0 : _imageList$.data_url,\n                alt: \"uploaded\",\n                width: \"100\",\n                style: {\n                  borderRadius: '8px',\n                  marginRight: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onImageRemoveAll,\n                variant: \"outlined\",\n                color: \"error\",\n                size: \"small\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","ImageUploading","Button","Box","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUpload","onImagesChange","_s","images","setImages","maxNumber","onChange","imageList","sx","border","padding","borderRadius","display","flexDirection","alignItems","children","multiple","value","dataURLKey","onImageUpload","onImageRemoveAll","isDragging","dragProps","_imageList$","variant","backgroundColor","color","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","src","data_url","alt","width","style","marginRight","size","_c","$RefreshReg$"],"sources":["D:/de351/pawpaw/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport { Button, Box, Typography } from '@mui/material';\r\n\r\nconst ImageUpload = ({ onImagesChange }) => {\r\n  const [images, setImages] = useState([]);\r\n  const maxNumber = 1;\r\n\r\n  const onChange = (imageList) => {\r\n    setImages(imageList);\r\n    onImagesChange(imageList); // Send selected image back to parent\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ border: '1px dashed #ccc', padding: '16px', borderRadius: '8px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <ImageUploading\r\n        multiple={false} // Only allow one image\r\n        value={images}\r\n        onChange={onChange}\r\n        maxNumber={maxNumber}\r\n        dataURLKey=\"data_url\"\r\n      >\r\n        {({ imageList, onImageUpload, onImageRemoveAll, isDragging, dragProps }) => (\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                backgroundColor: isDragging ? 'rgba(255, 0, 0, 0.1)' : 'transparent',\r\n                color: isDragging ? 'red' : 'inherit',\r\n                marginBottom: '16px',\r\n              }}\r\n              onClick={onImageUpload}\r\n              {...dragProps}\r\n            >\r\n              Click to upload image\r\n            </Button>\r\n            {imageList.length > 0 && (\r\n              <>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" sx={{ marginBottom: '8px' }}>\r\n                  Image Selected:\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <img src={imageList[0]?.data_url} alt=\"uploaded\" width=\"100\" style={{ borderRadius: '8px', marginRight: '8px' }} />\r\n                  <Button onClick={onImageRemoveAll} variant=\"outlined\" color=\"error\" size=\"small\">\r\n                    Remove\r\n                  </Button>\r\n                </Box>\r\n              </>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </ImageUploading>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}