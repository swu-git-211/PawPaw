{"ast":null,"code":"var _jsxFileName = \"D:\\\\de351\\\\pawpaw\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport Reply from './Reply'; // ใช้ Reply.js สำหรับการแสดงการตอบกลับ\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    fetchComments();\n  }, [postId]);\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/pawpaw_test/posts/${postId}/comments`);\n      setComments(response.data.comments);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`http://localhost:5000/pawpaw_test/posts/${postId}/comment`, {\n        content: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // รีเฟรชคอมเมนต์ทั้งหมดจาก server\n      fetchComments();\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Write a comment...\",\n        variant: \"outlined\",\n        size: \"small\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        sx: {\n          flex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAddComment,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginBottom: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: comment.userId.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          marginTop: '4px'\n        },\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Reply, {\n        comment: comment,\n        postId: postId,\n        fetchComments: fetchComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Box","Typography","Reply","jsxDEV","_jsxDEV","Comment","postId","_s","comments","setComments","newComment","setNewComment","fetchComments","response","get","data","error","console","handleAddComment","trim","token","localStorage","getItem","post","content","headers","Authorization","sx","padding","children","display","alignItems","gap","label","variant","size","value","onChange","e","target","flex","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","map","comment","marginBottom","fontWeight","userId","username","marginTop","_id","_c","$RefreshReg$"],"sources":["D:/de351/pawpaw/frontend/src/components/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\nimport Reply from './Reply'; // ใช้ Reply.js สำหรับการแสดงการตอบกลับ\r\n\r\nconst Comment = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/pawpaw_test/posts/${postId}/comments`);\r\n      setComments(response.data.comments);\r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (newComment.trim() === '') return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        `http://localhost:5000/pawpaw_test/posts/${postId}/comment`,\r\n        { content: newComment },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      // รีเฟรชคอมเมนต์ทั้งหมดจาก server\r\n      fetchComments();\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: '16px' }}>\r\n      {/* Input for adding a new comment */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\r\n        <TextField\r\n          label=\"Write a comment...\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          sx={{ flex: 1 }}\r\n        />\r\n        <Button onClick={handleAddComment} variant=\"contained\" color=\"primary\">\r\n          Comment\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Display the list of comments */}\r\n      {comments.map((comment) => (\r\n        <Box key={comment._id} sx={{ marginBottom: '12px' }}>\r\n          <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n            {comment.userId.username}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ marginTop: '4px' }}>\r\n            {comment.content}\r\n          </Typography>\r\n\r\n          {/* Display replies */}\r\n          <Reply comment={comment} postId={postId} fetchComments={fetchComments} />\r\n        </Box>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}