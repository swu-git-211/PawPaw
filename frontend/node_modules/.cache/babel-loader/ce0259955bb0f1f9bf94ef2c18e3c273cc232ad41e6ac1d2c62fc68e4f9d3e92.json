{"ast":null,"code":"var _jsxFileName = \"D:\\\\de351\\\\pawpaw\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, memo } from 'react';\nimport { TextField, Button, Typography, IconButton, Box } from '@mui/material';\nimport ReviewsIcon from '@mui/icons-material/Reviews';\nimport IosShareIcon from '@mui/icons-material/IosShare';\nimport LikeButton from './LikeButton';\nimport { shareContent } from './shareUtil';\nimport DeleteButton from './DeleteButton';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  postId,\n  initialComments\n}) => {\n  _s();\n  const [comments, setComments] = useState(initialComments || []);\n  const [replyInputs, setReplyInputs] = useState({});\n  const [showReplyFields, setShowReplyFields] = useState({});\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/pawpaw_test/posts/${postId}/comments`);\n      if (response.data.success) {\n        setComments(response.data.comments); // อัปเดต state ของคอมเมนต์\n      }\n    } catch (error) {\n      console.error('Failed to fetch comments:', error);\n    }\n  };\n\n  // Fetch comments when component mounts\n  useEffect(() => {\n    if (!initialComments) {\n      fetchComments();\n    }\n    const userId = localStorage.getItem('userId');\n    if (userId) {\n      setCurrentUserId(userId);\n      console.log(\"Loaded User ID in Comment:\", userId);\n    } else {\n      console.error(\"User ID is not set in localStorage\");\n    }\n\n    // eslint-disable-next-line\n  }, [initialComments]);\n  // eslint-disable-next-line\n\n  // Handle submitting a reply to a comment\n  const handleReplySubmit = async commentId => {\n    const replyContent = replyInputs[commentId];\n    if (replyContent && replyContent.trim() !== '') {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('Please log in to reply.');\n          return;\n        }\n\n        // Sending reply to the backend\n        const response = await axios.post(`http://localhost:5000/pawpaw_test/posts/${postId}/comment`, {\n          content: replyContent,\n          parentCommentId: commentId // Specify parentCommentId to indicate it's a reply\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          // Fetch comments again to get the updated list\n          await fetchComments();\n\n          // Clear the reply input field\n          setReplyInputs(prevState => ({\n            ...prevState,\n            [commentId]: '' // Clear input for the specific comment\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to create reply:', error);\n      }\n    }\n  };\n  const handleShareComment = comment => {\n    var _comment$userId;\n    shareContent({\n      title: `Check out this comment by ${(_comment$userId = comment.userId) === null || _comment$userId === void 0 ? void 0 : _comment$userId.username}`,\n      text: comment.content,\n      url: `${window.location.origin}/posts/${postId}#comment-${comment._id}`\n    });\n  };\n\n  // Handle like or unlike a comment\n  const handleLikeComment = async commentId => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Please log in to like this comment.');\n      return false;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/pawpaw_test/comments/${commentId}/like`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        console.log(\"comment.likes:\", comments.likes);\n        console.log(\"Current User ID:\", currentUserId);\n\n        // อัปเดต likes ใน frontend\n        setComments(prevComments => prevComments.map(comment => comment._id === commentId ? {\n          ...comment,\n          likes: response.data.likes\n        } : comment));\n        fetchComments();\n        return true;\n      }\n    } catch (error) {\n      console.error('Failed to like comment:', error);\n    }\n    return false;\n  };\n\n  // Toggle reply input field visibility\n  const toggleReplyField = commentId => {\n    setShowReplyFields(prevState => ({\n      ...prevState,\n      [commentId]: !prevState[commentId]\n    }));\n  };\n  const handleDeleteComment = async commentId => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('Please log in to delete the comment.');\n        return;\n      }\n      await axios.delete(`http://localhost:5000/pawpaw_test/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Remove the deleted comment from state\n      setComments(prevComments => prevComments.filter(comment => comment._id !== commentId));\n      alert('Comment deleted successfully.');\n    } catch (error) {\n      console.error('Failed to delete comment:', error);\n    }\n  };\n  const fetchRepliesRecursive = async parentCommentId => {\n    const replies = await Comment.find({\n      parentCommentId\n    }).populate('userId', 'username') // ดึงข้อมูลผู้ใช้\n    .lean(); // แปลงเป็น JSON object\n\n    for (const reply of replies) {\n      reply.replies = await fetchRepliesRecursive(reply._id); // ดึง replies ซ้อน\n    }\n    return replies;\n  };\n  const getCommentsWithReplies = async (req, res) => {\n    try {\n      const {\n        postId\n      } = req.params;\n\n      // ดึงคอมเมนต์ที่ไม่มี parentCommentId (คอมเมนต์หลัก)\n      const comments = await Comment.find({\n        postId,\n        parentCommentId: null\n      }).populate('userId', 'username').lean();\n\n      // ดึง replies ของแต่ละคอมเมนต์\n      for (const comment of comments) {\n        comment.replies = await fetchRepliesRecursive(comment._id);\n      }\n      res.status(200).json({\n        success: true,\n        comments\n      });\n    } catch (error) {\n      console.error(error);\n      res.status(500).json({\n        success: false,\n        error: 'Failed to fetch comments'\n      });\n    }\n  };\n\n  // Memoized comment card component\n  const CommentCard = /*#__PURE__*/memo(({\n    comment,\n    isReply\n  }) => {\n    var _comment$userId2;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '16px',\n        padding: '16px',\n        border: '1px solid #e0e0e0',\n        borderRadius: '12px',\n        backgroundColor: isReply ? '#f9f9f9' : '#ffffff',\n        marginLeft: isReply ? '40px' : '0px',\n        // จัดระยะห่างสำหรับการตอบกลับ\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 100\n        },\n        children: currentUserId && comment.userId && currentUserId === comment.userId._id && /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onDelete: () => handleDeleteComment(comment._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: ((_comment$userId2 = comment.userId) === null || _comment$userId2 === void 0 ? void 0 : _comment$userId2.username) || 'Unknown'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), ' ', \"| \", new Date(comment.createdAt).toLocaleDateString(), \" | \", new Date(comment.createdAt).toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          marginTop: '8px'\n        },\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px',\n          marginTop: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n          likedByUser: currentUserId ? comment.likes.includes(currentUserId) : false,\n          onLike: () => handleLikeComment(comment._id),\n          likeCount: comment.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"reply\",\n          onClick: () => toggleReplyField(comment._id),\n          children: /*#__PURE__*/_jsxDEV(ReviewsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"share\",\n          onClick: () => handleShareComment(comment),\n          children: /*#__PURE__*/_jsxDEV(IosShareIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), showReplyFields[comment._id] && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          marginTop: '8px',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Write a reply...\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: replyInputs[comment._id] || '',\n          onChange: e => setReplyInputs(prevState => ({\n            ...prevState,\n            [comment._id]: e.target.value\n          })),\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleReplySubmit(comment._id),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginLeft: '20px',\n          marginTop: '10px'\n        },\n        children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentCard, {\n          comment: reply,\n          isReply: true\n        }, reply._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n      comment: comment,\n      isReply: false\n    }, comment._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"m6x9uoBMy1SJgM2jqKgar/QqsG4=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","memo","TextField","Button","Typography","IconButton","Box","ReviewsIcon","IosShareIcon","LikeButton","shareContent","DeleteButton","axios","jsxDEV","_jsxDEV","Comment","postId","initialComments","_s","comments","setComments","replyInputs","setReplyInputs","showReplyFields","setShowReplyFields","currentUserId","setCurrentUserId","fetchComments","response","get","data","success","error","console","userId","localStorage","getItem","log","handleReplySubmit","commentId","replyContent","trim","token","alert","post","content","parentCommentId","headers","Authorization","prevState","handleShareComment","comment","_comment$userId","title","username","text","url","window","location","origin","_id","handleLikeComment","likes","prevComments","map","toggleReplyField","handleDeleteComment","delete","filter","fetchRepliesRecursive","replies","find","populate","lean","reply","getCommentsWithReplies","req","res","params","status","json","CommentCard","isReply","_comment$userId2","sx","marginTop","padding","border","borderRadius","backgroundColor","marginLeft","position","children","top","right","zIndex","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","fontWeight","Date","createdAt","toLocaleDateString","toLocaleTimeString","display","alignItems","gap","likedByUser","includes","onLike","likeCount","length","onClick","placeholder","size","value","onChange","e","target","flexGrow","color","_c","$RefreshReg$"],"sources":["D:/de351/pawpaw/frontend/src/components/Comment.js"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react';\r\nimport { TextField, Button, Typography, IconButton, Box } from '@mui/material';\r\nimport ReviewsIcon from '@mui/icons-material/Reviews';\r\nimport IosShareIcon from '@mui/icons-material/IosShare';\r\nimport LikeButton from './LikeButton';\r\nimport { shareContent } from './shareUtil';\r\nimport DeleteButton from './DeleteButton';\r\nimport axios from 'axios';\r\n\r\nconst Comment = ({ postId, initialComments }) => {\r\n  const [comments, setComments] = useState(initialComments || []);\r\n  const [replyInputs, setReplyInputs] = useState({});\r\n  const [showReplyFields, setShowReplyFields] = useState({});\r\n  const [currentUserId, setCurrentUserId] = useState(null);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/pawpaw_test/posts/${postId}/comments`);\r\n      if (response.data.success) {\r\n        setComments(response.data.comments); // อัปเดต state ของคอมเมนต์\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch comments:', error);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  // Fetch comments when component mounts\r\n  useEffect(() => {\r\n    if (!initialComments) {\r\n      fetchComments();\r\n    }\r\n\r\n    const userId = localStorage.getItem('userId');\r\n    if (userId) {\r\n      setCurrentUserId(userId);\r\n      console.log(\"Loaded User ID in Comment:\", userId);\r\n    } else {\r\n      console.error(\"User ID is not set in localStorage\");\r\n    }\r\n\r\n\r\n    // eslint-disable-next-line\r\n  }, [initialComments]);\r\n  // eslint-disable-next-line\r\n\r\n  // Handle submitting a reply to a comment\r\n  const handleReplySubmit = async (commentId) => {\r\n    const replyContent = replyInputs[commentId];\r\n    if (replyContent && replyContent.trim() !== '') {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          alert('Please log in to reply.');\r\n          return;\r\n        }\r\n\r\n        // Sending reply to the backend\r\n        const response = await axios.post(\r\n          `http://localhost:5000/pawpaw_test/posts/${postId}/comment`,\r\n          {\r\n            content: replyContent,\r\n            parentCommentId: commentId, // Specify parentCommentId to indicate it's a reply\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          // Fetch comments again to get the updated list\r\n          await fetchComments();\r\n\r\n          // Clear the reply input field\r\n          setReplyInputs((prevState) => ({\r\n            ...prevState,\r\n            [commentId]: '', // Clear input for the specific comment\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to create reply:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleShareComment = (comment) => {\r\n    shareContent({\r\n      title: `Check out this comment by ${comment.userId?.username}`,\r\n      text: comment.content,\r\n      url: `${window.location.origin}/posts/${postId}#comment-${comment._id}`,\r\n    });\r\n  };\r\n  \r\n\r\n  // Handle like or unlike a comment\r\n  const handleLikeComment = async (commentId) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      alert('Please log in to like this comment.');\r\n      return false;\r\n    }\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:5000/pawpaw_test/comments/${commentId}/like`,\r\n        {},\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      if (response.data.success) {\r\n        console.log(\"comment.likes:\", comments.likes);\r\n        console.log(\"Current User ID:\", currentUserId);\r\n\r\n        // อัปเดต likes ใน frontend\r\n        setComments((prevComments) =>\r\n          prevComments.map((comment) =>\r\n            comment._id === commentId ? { ...comment, likes: response.data.likes } : comment\r\n          )\r\n        );\r\n        fetchComments();\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to like comment:', error);\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  // Toggle reply input field visibility\r\n  const toggleReplyField = (commentId) => {\r\n    setShowReplyFields((prevState) => ({\r\n      ...prevState,\r\n      [commentId]: !prevState[commentId],\r\n    }));\r\n  };\r\n\r\n  const handleDeleteComment = async (commentId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('Please log in to delete the comment.');\r\n        return;\r\n      }\r\n  \r\n      await axios.delete(`http://localhost:5000/pawpaw_test/comments/${commentId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n  \r\n      // Remove the deleted comment from state\r\n      setComments((prevComments) => prevComments.filter((comment) => comment._id !== commentId));\r\n      alert('Comment deleted successfully.');\r\n    } catch (error) {\r\n      console.error('Failed to delete comment:', error);\r\n    }\r\n  };\r\n\r\n  const fetchRepliesRecursive = async (parentCommentId) => {\r\n    const replies = await Comment.find({ parentCommentId })\r\n      .populate('userId', 'username') // ดึงข้อมูลผู้ใช้\r\n      .lean(); // แปลงเป็น JSON object\r\n  \r\n    for (const reply of replies) {\r\n      reply.replies = await fetchRepliesRecursive(reply._id); // ดึง replies ซ้อน\r\n    }\r\n    return replies;\r\n  };\r\n  \r\n  const getCommentsWithReplies = async (req, res) => {\r\n    try {\r\n      const { postId } = req.params;\r\n  \r\n      // ดึงคอมเมนต์ที่ไม่มี parentCommentId (คอมเมนต์หลัก)\r\n      const comments = await Comment.find({ postId, parentCommentId: null })\r\n        .populate('userId', 'username')\r\n        .lean();\r\n  \r\n      // ดึง replies ของแต่ละคอมเมนต์\r\n      for (const comment of comments) {\r\n        comment.replies = await fetchRepliesRecursive(comment._id);\r\n      }\r\n  \r\n      res.status(200).json({ success: true, comments });\r\n    } catch (error) {\r\n      console.error(error);\r\n      res.status(500).json({ success: false, error: 'Failed to fetch comments' });\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  // Memoized comment card component\r\n  const CommentCard = memo(({ comment, isReply }) => {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          marginTop: '16px',\r\n          padding: '16px',\r\n          border: '1px solid #e0e0e0',\r\n          borderRadius: '12px',\r\n          backgroundColor: isReply ? '#f9f9f9' : '#ffffff',\r\n          marginLeft: isReply ? '40px' : '0px', // จัดระยะห่างสำหรับการตอบกลับ\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        \r\n        {/* Delete button at top-right corner */}\r\n        <Box sx={{ position: 'absolute', top: '8px', right: '8px', zIndex: 100 }}>\r\n          {currentUserId && comment.userId && currentUserId === comment.userId._id && (\r\n            <DeleteButton onDelete={() => handleDeleteComment(comment._id)} />\r\n          )}\r\n        </Box>\r\n\r\n        {/* ชื่อผู้ใช้และวันที่ */}\r\n        <Typography variant=\"subtitle2\">\r\n          <span style={{ fontWeight: 'bold' }}>{comment.userId?.username || 'Unknown'}</span>\r\n          {' '}| {new Date(comment.createdAt).toLocaleDateString()} | {new Date(comment.createdAt).toLocaleTimeString()}\r\n        </Typography>\r\n  \r\n        {/* เนื้อหาคอมเมนต์ */}\r\n        <Typography variant=\"body2\" sx={{ marginTop: '8px' }}>\r\n          {comment.content}\r\n        </Typography>\r\n  \r\n        {/* Actions */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: '8px', marginTop: '8px' }}>\r\n          <LikeButton\r\n            likedByUser={currentUserId ? comment.likes.includes(currentUserId) : false}\r\n            onLike={() => handleLikeComment(comment._id)}\r\n            likeCount={comment.likes.length}\r\n          />\r\n          <IconButton aria-label=\"reply\" onClick={() => toggleReplyField(comment._id)}>\r\n            <ReviewsIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"share\" onClick={() => handleShareComment(comment)}>\r\n            <IosShareIcon />\r\n          </IconButton>\r\n        </Box>\r\n  \r\n        {/* ช่องสำหรับพิมพ์ตอบกลับ */}\r\n        {showReplyFields[comment._id] && (\r\n          <Box sx={{ display: 'flex', alignItems: 'center', marginTop: '8px', gap: '8px' }}>\r\n            <TextField\r\n              placeholder=\"Write a reply...\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={replyInputs[comment._id] || ''}\r\n              onChange={(e) =>\r\n                setReplyInputs((prevState) => ({\r\n                  ...prevState,\r\n                  [comment._id]: e.target.value,\r\n                }))\r\n              }\r\n              sx={{ flexGrow: 1 }}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleReplySubmit(comment._id)}>\r\n              Reply\r\n            </Button>\r\n          </Box>\r\n        )}\r\n  \r\n        {/* แสดง replies แบบ recursive */}\r\n        {comment.replies && comment.replies.length > 0 && (\r\n          <Box sx={{ marginLeft: '20px', marginTop: '10px' }}>\r\n            {comment.replies.map((reply) => (\r\n              <CommentCard key={reply._id} comment={reply} isReply={true} />\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    );\r\n  });\r\n  \r\n  \r\n  \r\n  return (\r\n    <div>\r\n      {comments.map((comment) => (\r\n        <CommentCard key={comment._id} comment={comment} isReply={false} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}