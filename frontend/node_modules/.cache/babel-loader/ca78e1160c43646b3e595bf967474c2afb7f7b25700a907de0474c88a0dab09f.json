{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, TextField, Button, Select, MenuItem, FormControlLabel, Checkbox } from '@mui/material';\r\n\r\nconst EditProfile = ({ user, onSave }) => {\r\n  const [formData, setFormData] = useState({\r\n    phone: '',\r\n    birthday: '',\r\n    bio: '',\r\n    petTypes: [],\r\n    showEmail: false,\r\n  });\r\n  const [profileImage, setProfileImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            console.log('Token:', token); // ตรวจสอบ Token\r\n            if (!token) {\r\n                alert('Please log in first');\r\n                return;\r\n            }\r\n    \r\n            const response = await axios.get('http://localhost:5000/pawpaw_test/user/profile', {\r\n                headers: { \r\n                    Authorization: Bearer ${token} },\r\n                    'Content-Type': 'multipart/form-data',\r\n            });\r\n            console.log('Response Data:', response.data); // ตรวจสอบข้อมูลที่เซิร์ฟเวอร์ตอบกลับ\r\n    \r\n            const userData = response.data;\r\n            if (userData) {\r\n                setFormData({\r\n                    phone: userData.phone || '',\r\n                    birthday: userData.birthday || '',\r\n                    bio: userData.bio || '',\r\n                    petTypes: userData.petTypes || [],\r\n                    showEmail: userData.showEmail || false,\r\n                });\r\n                setProfileImage(userData.profileImage); // URL ของภาพ\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching profile:', error.response || error.message);\r\n            alert('Failed to fetch profile');\r\n        }\r\n    };\r\n    \r\n\r\n    fetchUserProfile();\r\n  }, []); // ใช้ [] เพื่อให้เรียกฟังก์ชันแค่ครั้งเดียวเมื่อโหลด Component\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const handleSave = async () => {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Token:', token); // ตรวจสอบ Token\r\n        if (!token) {\r\n            alert('Please log in first');\r\n            return;\r\n        }\r\n\r\n        // สร้าง FormData และเพิ่มข้อมูล\r\n        const data = new FormData();\r\n        data.append('phone', formData.phone); // เพิ่มฟิลด์ phone\r\n        data.append('bio', formData.bio); // เพิ่มฟิลด์ bio\r\n        if (profileImage) {\r\n            data.append('profileImage', profileImage); // เพิ่มไฟล์รูปภาพ\r\n        }\r\n\r\n        // ส่งคำขอไปยัง Backend\r\n        const response = await axios.put('http://localhost:5000/pawpaw_test/user/profile', data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n\r\n        console.log('Response:', response.data); // ตรวจสอบการตอบกลับจาก API\r\n        alert('Profile updated successfully');\r\n    } catch (error) {\r\n        console.error('Error updating profile:', error.response || error.message);\r\n        alert('Failed to update profile');\r\n    }\r\n};\r\n\r\n  return (\r\n    <Box>\r\n      <h2>Edit Profile</h2>\r\n      <form>\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Birthday\"\r\n          name=\"birthday\"\r\n          type=\"date\"\r\n          value={formData.birthday}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          label=\"Bio\"\r\n          name=\"bio\"\r\n          value={formData.bio}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Select\r\n          multiple\r\n          value={formData.petTypes}\r\n          onChange={(e) => setFormData({ ...formData, petTypes: e.target.value })}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        >\r\n          {['Cat', 'Dog', 'Bird', 'Fish', 'Rabbit', 'Turtle', 'Other'].map((type) => (\r\n            <MenuItem key={type} value={type}>\r\n              {type}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={formData.showEmail}\r\n              onChange={(e) => setFormData({ ...formData, showEmail: e.target.checked })}\r\n            />\r\n          }\r\n          label=\"Show Email on Profile\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setProfileImage(e.target.files[0])}\r\n          accept=\"image/*\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n          Save Changes\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProfile;*/","map":{"version":3,"names":[],"sources":["D:/de351/pawpaw/frontend/src/components/EditProfile.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, TextField, Button, Select, MenuItem, FormControlLabel, Checkbox } from '@mui/material';\r\n\r\nconst EditProfile = ({ user, onSave }) => {\r\n  const [formData, setFormData] = useState({\r\n    phone: '',\r\n    birthday: '',\r\n    bio: '',\r\n    petTypes: [],\r\n    showEmail: false,\r\n  });\r\n  const [profileImage, setProfileImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            console.log('Token:', token); // ตรวจสอบ Token\r\n            if (!token) {\r\n                alert('Please log in first');\r\n                return;\r\n            }\r\n    \r\n            const response = await axios.get('http://localhost:5000/pawpaw_test/user/profile', {\r\n                headers: { \r\n                    Authorization: Bearer ${token} },\r\n                    'Content-Type': 'multipart/form-data',\r\n            });\r\n            console.log('Response Data:', response.data); // ตรวจสอบข้อมูลที่เซิร์ฟเวอร์ตอบกลับ\r\n    \r\n            const userData = response.data;\r\n            if (userData) {\r\n                setFormData({\r\n                    phone: userData.phone || '',\r\n                    birthday: userData.birthday || '',\r\n                    bio: userData.bio || '',\r\n                    petTypes: userData.petTypes || [],\r\n                    showEmail: userData.showEmail || false,\r\n                });\r\n                setProfileImage(userData.profileImage); // URL ของภาพ\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching profile:', error.response || error.message);\r\n            alert('Failed to fetch profile');\r\n        }\r\n    };\r\n    \r\n\r\n    fetchUserProfile();\r\n  }, []); // ใช้ [] เพื่อให้เรียกฟังก์ชันแค่ครั้งเดียวเมื่อโหลด Component\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n  const handleSave = async () => {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Token:', token); // ตรวจสอบ Token\r\n        if (!token) {\r\n            alert('Please log in first');\r\n            return;\r\n        }\r\n\r\n        // สร้าง FormData และเพิ่มข้อมูล\r\n        const data = new FormData();\r\n        data.append('phone', formData.phone); // เพิ่มฟิลด์ phone\r\n        data.append('bio', formData.bio); // เพิ่มฟิลด์ bio\r\n        if (profileImage) {\r\n            data.append('profileImage', profileImage); // เพิ่มไฟล์รูปภาพ\r\n        }\r\n\r\n        // ส่งคำขอไปยัง Backend\r\n        const response = await axios.put('http://localhost:5000/pawpaw_test/user/profile', data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n\r\n        console.log('Response:', response.data); // ตรวจสอบการตอบกลับจาก API\r\n        alert('Profile updated successfully');\r\n    } catch (error) {\r\n        console.error('Error updating profile:', error.response || error.message);\r\n        alert('Failed to update profile');\r\n    }\r\n};\r\n\r\n  return (\r\n    <Box>\r\n      <h2>Edit Profile</h2>\r\n      <form>\r\n        <TextField\r\n          label=\"Phone\"\r\n          name=\"phone\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Birthday\"\r\n          name=\"birthday\"\r\n          type=\"date\"\r\n          value={formData.birthday}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{ shrink: true }}\r\n        />\r\n        <TextField\r\n          label=\"Bio\"\r\n          name=\"bio\"\r\n          value={formData.bio}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Select\r\n          multiple\r\n          value={formData.petTypes}\r\n          onChange={(e) => setFormData({ ...formData, petTypes: e.target.value })}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        >\r\n          {['Cat', 'Dog', 'Bird', 'Fish', 'Rabbit', 'Turtle', 'Other'].map((type) => (\r\n            <MenuItem key={type} value={type}>\r\n              {type}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={formData.showEmail}\r\n              onChange={(e) => setFormData({ ...formData, showEmail: e.target.checked })}\r\n            />\r\n          }\r\n          label=\"Show Email on Profile\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setProfileImage(e.target.files[0])}\r\n          accept=\"image/*\"\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n          Save Changes\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProfile;*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}