{"ast":null,"code":"var _jsxFileName = \"D:\\\\de351\\\\pawpaw\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Reply from './Reply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  postId,\n  initialComments\n}) => {\n  _s();\n  const [comments, setComments] = useState(initialComments);\n\n  // Filter out duplicate comments based on _id\n  const uniqueComments = comments.filter((value, index, self) => self.findIndex(c => c._id === value._id) === index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: uniqueComments.map(comment => {\n      var _comment$userId;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_comment$userId = comment.userId) === null || _comment$userId === void 0 ? void 0 : _comment$userId.username, \": \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Reply, {\n          comment: comment,\n          postId: postId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"enEO6ff2gPsl5AN1tP5Lauu0hEc=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Reply","jsxDEV","_jsxDEV","Comment","postId","initialComments","_s","comments","setComments","uniqueComments","filter","value","index","self","findIndex","c","_id","children","map","comment","_comment$userId","userId","username","content","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/de351/pawpaw/frontend/src/components/Comment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Reply from './Reply';\r\n\r\nconst Comment = ({ postId, initialComments }) => {\r\n  const [comments, setComments] = useState(initialComments);\r\n\r\n  // Filter out duplicate comments based on _id\r\n  const uniqueComments = comments.filter(\r\n    (value, index, self) => self.findIndex((c) => c._id === value._id) === index\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {uniqueComments.map((comment) => (\r\n        <div key={comment._id}>\r\n          <p>{comment.userId?.username}: {comment.content}</p>\r\n          <Reply comment={comment} postId={postId} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACM,eAAe,CAAC;;EAEzD;EACA,MAAMI,cAAc,GAAGF,QAAQ,CAACG,MAAM,CACpC,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,KAAKA,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKL,KAAK,CAACK,GAAG,CAAC,KAAKJ,KACzE,CAAC;EAED,oBACEV,OAAA;IAAAe,QAAA,EACGR,cAAc,CAACS,GAAG,CAAEC,OAAO;MAAA,IAAAC,eAAA;MAAA,oBAC1BlB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,IAAAG,eAAA,GAAID,OAAO,CAACE,MAAM,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,QAAQ,EAAC,IAAE,EAACH,OAAO,CAACI,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDzB,OAAA,CAACF,KAAK;UAACmB,OAAO,EAAEA,OAAQ;UAACf,MAAM,EAAEA;QAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFnCR,OAAO,CAACH,GAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CAAC;IAAA,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlBIH,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}