{"ast":null,"code":"var _jsxFileName = \"D:\\\\de351\\\\pawpaw\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\n// Comment.js\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, IconButton } from '@mui/material';\nimport ReviewsIcon from '@mui/icons-material/Reviews';\nimport IosShareIcon from '@mui/icons-material/IosShare';\nimport LikeButton from './LikeButton';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  postId,\n  comments,\n  onAddComment\n}) => {\n  _s();\n  const [replyInputs, setReplyInputs] = useState({}); // Store input for each reply\n  const [showReplyFields, setShowReplyFields] = useState({}); // Show/hide each reply input\n\n  // Handle submitting a reply to a comment\n  const handleReplySubmit = async commentId => {\n    const replyContent = replyInputs[commentId];\n    if (replyContent && replyContent.trim() !== '') {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          alert('Please log in to reply.');\n          return;\n        }\n\n        // Sending reply to the backend\n        const response = await axios.post(`http://localhost:5000/pawpaw_test/posts/${postId}/comment`, {\n          content: replyContent,\n          parentCommentId: commentId // Specify parentCommentId to indicate it's a reply\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          // Add the reply to the state\n          onAddComment(response.data.comment);\n          setReplyInputs(prevState => ({\n            ...prevState,\n            [commentId]: '' // Clear reply input field\n          }));\n        }\n      } catch (error) {\n        console.error('Failed to create reply:', error);\n      }\n    }\n  };\n\n  // Toggle reply input field visibility\n  const toggleReplyField = commentId => {\n    setShowReplyFields(prevState => ({\n      ...prevState,\n      [commentId]: !prevState[commentId]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: comments.map(comment => {\n      var _comment$userId;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          padding: '10px',\n          border: '1px solid #e0e0e0',\n          borderRadius: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            marginBottom: '0.5rem'\n          },\n          children: [(_comment$userId = comment.userId) !== null && _comment$userId !== void 0 && _comment$userId.username ? comment.userId.username : \"Unknown\", \": \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(LikeButton, {\n            likedByUser: comment.likedByUser,\n            onLike: () => {\n              console.log(`Liked comment with ID: ${comment._id}`);\n            },\n            likeCount: comment.likes ? comment.likes.length : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"reply\",\n            onClick: () => toggleReplyField(comment._id),\n            style: {\n              marginLeft: '0.5rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(ReviewsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), showReplyFields[comment._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              marginLeft: '1rem',\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Write a reply...\",\n              variant: \"outlined\",\n              value: replyInputs[comment._id] || '',\n              onChange: e => setReplyInputs(prevState => ({\n                ...prevState,\n                [comment._id]: e.target.value\n              })),\n              size: \"small\",\n              sx: {\n                flexGrow: 1,\n                marginRight: '0.5rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => handleReplySubmit(comment._id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: '2rem',\n            marginTop: '1rem'\n          },\n          children: comment.replies.map(reply => {\n            var _reply$userId;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '0.5rem',\n                padding: '10px',\n                border: '1px solid #f0f0f0',\n                borderRadius: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  marginBottom: '0.5rem'\n                },\n                children: [(_reply$userId = reply.userId) !== null && _reply$userId !== void 0 && _reply$userId.username ? reply.userId.username : \"Unknown\", \": \", reply.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, reply._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"MrMWgGxzBtrPcBlt0EqZwl01DUU=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","IconButton","ReviewsIcon","IosShareIcon","LikeButton","axios","jsxDEV","_jsxDEV","Comment","postId","comments","onAddComment","_s","replyInputs","setReplyInputs","showReplyFields","setShowReplyFields","handleReplySubmit","commentId","replyContent","trim","token","localStorage","getItem","alert","response","post","content","parentCommentId","headers","Authorization","data","success","comment","prevState","error","console","toggleReplyField","children","map","_comment$userId","style","marginTop","padding","border","borderRadius","variant","sx","marginBottom","userId","username","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","likedByUser","onLike","log","_id","likeCount","likes","length","onClick","marginLeft","flexGrow","label","value","onChange","e","target","size","marginRight","color","replies","reply","_reply$userId","_c","$RefreshReg$"],"sources":["D:/de351/pawpaw/frontend/src/components/Comment.js"],"sourcesContent":["// Comment.js\r\nimport React, { useState } from 'react';\r\nimport { TextField, Button, Typography, IconButton } from '@mui/material';\r\nimport ReviewsIcon from '@mui/icons-material/Reviews';\r\nimport IosShareIcon from '@mui/icons-material/IosShare';\r\nimport LikeButton from './LikeButton';\r\nimport axios from 'axios';\r\n\r\nconst Comment = ({ postId, comments, onAddComment }) => {\r\n  const [replyInputs, setReplyInputs] = useState({}); // Store input for each reply\r\n  const [showReplyFields, setShowReplyFields] = useState({}); // Show/hide each reply input\r\n\r\n  // Handle submitting a reply to a comment\r\n  const handleReplySubmit = async (commentId) => {\r\n    const replyContent = replyInputs[commentId];\r\n    if (replyContent && replyContent.trim() !== '') {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n          alert('Please log in to reply.');\r\n          return;\r\n        }\r\n\r\n        // Sending reply to the backend\r\n        const response = await axios.post(\r\n          `http://localhost:5000/pawpaw_test/posts/${postId}/comment`,\r\n          {\r\n            content: replyContent,\r\n            parentCommentId: commentId, // Specify parentCommentId to indicate it's a reply\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          // Add the reply to the state\r\n          onAddComment(response.data.comment);\r\n          setReplyInputs((prevState) => ({\r\n            ...prevState,\r\n            [commentId]: '', // Clear reply input field\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to create reply:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Toggle reply input field visibility\r\n  const toggleReplyField = (commentId) => {\r\n    setShowReplyFields((prevState) => ({\r\n      ...prevState,\r\n      [commentId]: !prevState[commentId],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {comments.map((comment) => (\r\n        <div key={comment._id} style={{ marginTop: '1rem', padding: '10px', border: '1px solid #e0e0e0', borderRadius: '5px' }}>\r\n          <Typography variant=\"body2\" sx={{ marginBottom: '0.5rem' }}>\r\n            {comment.userId?.username ? comment.userId.username : \"Unknown\"}: {comment.content}\r\n          </Typography>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {/* Like Button Component */}\r\n            <LikeButton\r\n              likedByUser={comment.likedByUser}\r\n              onLike={() => {\r\n                console.log(`Liked comment with ID: ${comment._id}`);\r\n              }}\r\n              likeCount={comment.likes ? comment.likes.length : 0}\r\n            />\r\n\r\n            {/* Reply Icon to toggle reply field */}\r\n            <IconButton\r\n              aria-label=\"reply\"\r\n              onClick={() => toggleReplyField(comment._id)}\r\n              style={{ marginLeft: '0.5rem' }}\r\n            >\r\n              <ReviewsIcon />\r\n            </IconButton>\r\n\r\n            {/* Reply input field */}\r\n            {showReplyFields[comment._id] && (\r\n              <div style={{ display: 'flex', alignItems: 'center', marginLeft: '1rem', flexGrow: 1 }}>\r\n                <TextField\r\n                  label=\"Write a reply...\"\r\n                  variant=\"outlined\"\r\n                  value={replyInputs[comment._id] || ''}\r\n                  onChange={(e) => setReplyInputs((prevState) => ({\r\n                    ...prevState,\r\n                    [comment._id]: e.target.value,\r\n                  }))}\r\n                  size=\"small\"\r\n                  sx={{ flexGrow: 1, marginRight: '0.5rem' }}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handleReplySubmit(comment._id)}\r\n                >\r\n                  Reply\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Display replies */}\r\n          {comment.replies && comment.replies.length > 0 && (\r\n            <div style={{ marginLeft: '2rem', marginTop: '1rem' }}>\r\n              {comment.replies.map((reply) => (\r\n                <div key={reply._id} style={{ marginTop: '0.5rem', padding: '10px', border: '1px solid #f0f0f0', borderRadius: '5px' }}>\r\n                  <Typography variant=\"body2\" sx={{ marginBottom: '0.5rem' }}>\r\n                    {reply.userId?.username ? reply.userId.username : \"Unknown\"}: {reply.content}\r\n                  </Typography>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}