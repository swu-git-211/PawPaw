{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Forum from './pages/Forum';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport { jwtDecode } from 'jwt-decode';\n\n\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // ตรวจสอบ token ใน localStorage เมื่อโหลดแอปครั้งแรก\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleLogin = () => setIsLoggedIn(true);\n  const handleLogout = () => {\n    // ลบ token ออกจาก localStorage และอัปเดตสถานะการล็อกอิน\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    // ตรวจสอบ token ใน localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n\n        // ตรวจสอบว่า token หมดอายุหรือไม่\n        if (decodedToken.exp < currentTime) {\n          handleLogout(); // ถ้าหมดอายุให้ logout ออก\n          alert('Session expired. You have been logged out.');\n        } else {\n          setIsLoggedIn(true); // ถ้า token ยังไม่หมดอายุ\n        }\n      } catch (error) {\n        console.error('Invalid token');\n        handleLogout();\n      }\n    }\n  }, []);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar isLoggedIn={isLoggedIn} onLogout={handleLogout} />\n      <main style={{ flexGrow: 1, padding: '24px', marginTop: '60px' }}>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/forum\" element={<Forum />} />\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n          <Route path=\"/register\" element={<Register />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;*/","map":{"version":3,"names":[],"sources":["D:/de351/pawpaw/frontend/src/App.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport { Routes, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Forum from './pages/Forum';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport { jwtDecode } from 'jwt-decode';\n\n\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // ตรวจสอบ token ใน localStorage เมื่อโหลดแอปครั้งแรก\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleLogin = () => setIsLoggedIn(true);\n  const handleLogout = () => {\n    // ลบ token ออกจาก localStorage และอัปเดตสถานะการล็อกอิน\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n\n  useEffect(() => {\n    // ตรวจสอบ token ใน localStorage\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n\n        // ตรวจสอบว่า token หมดอายุหรือไม่\n        if (decodedToken.exp < currentTime) {\n          handleLogout(); // ถ้าหมดอายุให้ logout ออก\n          alert('Session expired. You have been logged out.');\n        } else {\n          setIsLoggedIn(true); // ถ้า token ยังไม่หมดอายุ\n        }\n      } catch (error) {\n        console.error('Invalid token');\n        handleLogout();\n      }\n    }\n  }, []);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar isLoggedIn={isLoggedIn} onLogout={handleLogout} />\n      <main style={{ flexGrow: 1, padding: '24px', marginTop: '60px' }}>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/forum\" element={<Forum />} />\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n          <Route path=\"/register\" element={<Register />} />\n        </Routes>\n      </main>\n    </div>\n  );\n};\n\nexport default App;*/\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}