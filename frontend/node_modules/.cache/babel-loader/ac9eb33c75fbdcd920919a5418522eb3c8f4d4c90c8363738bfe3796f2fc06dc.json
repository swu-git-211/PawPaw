{"ast":null,"code":"var _jsxFileName = \"D:\\\\de351\\\\pawpaw\\\\frontend\\\\src\\\\components\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n\n  // Fetch comments when component mounts\n  useEffect(() => {\n    fetchComments();\n  }, [postId]);\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/pawpaw_test/posts/${postId}/comments`);\n      setComments(response.data.comments);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`http://localhost:5000/pawpaw_test/posts/${postId}/comment`, {\n        content: newComment\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments([response.data.comment, ...comments]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Write a comment...\",\n      variant: \"outlined\",\n      size: \"small\" // Smaller size\n      ,\n      fullWidth: true,\n      value: newComment,\n      onChange: e => setNewComment(e.target.value),\n      sx: {\n        marginBottom: '8px',\n        borderRadius: '8px',\n        '& .MuiOutlinedInput-root': {\n          borderRadius: '8px'\n        },\n        // Limit width for a single-line input box\n        '& .MuiInputBase-root': {\n          maxWidth: '500px'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddComment,\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        width: '100%',\n        maxWidth: '150px',\n        // Limit the button width\n        borderRadius: '8px',\n        padding: '6px 0',\n        fontSize: '14px',\n        backgroundColor: '#3f51b5',\n        // Adjust color as per your design\n        '&:hover': {\n          backgroundColor: '#303f9f' // Adjust hover color\n        }\n      },\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginBottom: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          fontWeight: 'bold'\n        },\n        children: comment.userId.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          marginTop: '4px'\n        },\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Comment, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","Box","Typography","jsxDEV","_jsxDEV","Comment","postId","_s","comments","setComments","newComment","setNewComment","fetchComments","response","get","data","error","console","handleAddComment","trim","token","localStorage","getItem","post","content","headers","Authorization","comment","sx","padding","children","label","variant","size","fullWidth","value","onChange","e","target","marginBottom","borderRadius","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","width","fontSize","backgroundColor","map","fontWeight","userId","username","marginTop","_id","_c","$RefreshReg$"],"sources":["D:/de351/pawpaw/frontend/src/components/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\n\r\nconst Comment = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  // Fetch comments when component mounts\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/pawpaw_test/posts/${postId}/comments`);\r\n      setComments(response.data.comments);\r\n    } catch (error) {\r\n      console.error('Error fetching comments:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (newComment.trim() === '') return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        `http://localhost:5000/pawpaw_test/posts/${postId}/comment`,\r\n        { content: newComment },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setComments([response.data.comment, ...comments]);\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: '16px' }}>\r\n    {/* Input for adding a new comment */}\r\n    <TextField\r\n      label=\"Write a comment...\"\r\n      variant=\"outlined\"\r\n      size=\"small\"  // Smaller size\r\n      fullWidth\r\n      value={newComment}\r\n      onChange={(e) => setNewComment(e.target.value)}\r\n      sx={{\r\n        marginBottom: '8px',\r\n        borderRadius: '8px',\r\n        '& .MuiOutlinedInput-root': {\r\n          borderRadius: '8px',\r\n        },\r\n        // Limit width for a single-line input box\r\n        '& .MuiInputBase-root': {\r\n          maxWidth: '500px',\r\n        },\r\n      }}\r\n    />\r\n\r\n    {/* Comment Button */}\r\n    <Button\r\n      onClick={handleAddComment}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      sx={{\r\n        width: '100%',\r\n        maxWidth: '150px', // Limit the button width\r\n        borderRadius: '8px',\r\n        padding: '6px 0',\r\n        fontSize: '14px',\r\n        backgroundColor: '#3f51b5', // Adjust color as per your design\r\n        '&:hover': {\r\n          backgroundColor: '#303f9f', // Adjust hover color\r\n        },\r\n      }}\r\n    >\r\n      Comment\r\n    </Button>\r\n\r\n    {/* Display the list of comments */}\r\n    {comments.map((comment) => (\r\n      <Box key={comment._id} sx={{ marginBottom: '12px' }}>\r\n        <Typography variant=\"body1\" sx={{ fontWeight: 'bold' }}>\r\n          {comment.userId.username}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ marginTop: '4px' }}>\r\n          {comment.content}\r\n        </Typography>\r\n      </Box>\r\n    ))}\r\n  </Box>\r\n);\r\n};\r\n\r\nexport default Comment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}